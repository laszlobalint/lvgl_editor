<screen permanent="true">
    <consts>
        <!-- Constant shold be defined at the begiing of the generated C file 
             with upper case name -->    
        <string name="btn_text" value="Supet button"/>
    </consts>

    <styles>
        <!-- 0xf00 should be exported as lv_color_hex3(0xf00)-->
        <style name="style1" bg_color="0xf00"/>
    </styles>


    <view flex_flow="column">
        <!-- A lot of props are not set. Use the default values as needed-->
        <mybutton button_color="0xff0000"  subject="subject1" text="My button 1"></mybutton>

        <!-- As width is also set create an lv_obj_t * varaible too -->
        <mybutton button_opa="200" icon="bell" subject="subject1"  text="My button 2" width="100">
            <!-- some_screen_1 is export as the variable name. 
                 Only <screen permanent="true"> screens can be loaded like this
                 as we assume that these screens always exist.
                 So also collect and create permanent screens in <project_name>_gen.c/h -->
            <lv_obj-screen_load_event screen="some_screen_1" trigger="long_pressed" duration="300" delay="100" anim_type="over_right"/>
            <!-- some_screen_2 is exported some_screen_2_create_cb, for the rest use the default values -->
            <screen_create_event screen="some_screen_2"/>
            <style name="style1" selector="scrollbar"/>
            <style_remove name="style1" selector="scrollbar"/>
            <lv_obj-style_remove selector="pressed"/>
            <style_remove selector="scrollbar|pressed"/>
            <style_remove/>
            <style_remove_all/>
        </mybutton>
 
        <!-- Super_button has smaller API -->
        <super_button button_text="#btn_text" subject="subject1"></super_button>

        <!-- `bind_*` is special. Use the "bind" keyword instead of "set" -->  
        <lv_slider bind_value="subject1"/>
         
        <smart_slider value="50">
            <lv_obj-event_cb callback="my_cb1" trigger="clicked" user_data="1" />
            <event_cb callback="my_cb1" trigger="pressed"/>
            
            <smart_slider-text color="0x00ff00" font="font_md" style_bg_opa="50%"> 
                <lv_image src="bell" x="100"></lv_image>
            </smart_slider-text>
            
            <smart_slider-item idx="30" size="20"/>
            <smart_slider-item idx="31"/>

            <smart_slider-ticks part="top"/> <!-- Use the value=10 default, see smart_slider.xml -->
            <smart_slider-ticks part="bottom" value="200"></smart_slider-ticks>
            <smart_slider-bind_value subject="subject1" state="warning" fmt="%04d"/>
            <smart_slider-bind_value subject="subject2" state="critical"/>

            <!-- Test calling lv_obj and lv_label setters text-transla -->
            <h3 />
            <h3 width="100"/>
            <h3 text="Hello"/>
            <h3 text="Hello&#xA;new line"/> <!--&#xA; should be converted to \n. -->
            <h3 text-translated="dog"/> <!-- Converts to lv_tr("dog") -->
            <h3 bind_text="subject2" />

            <lv_chart >
                <!-- chart values has int[count] type, so export an array and pass the 
                     nuber of items as an other parameter -->
                <lv_chart-series color="0xff0000" values="10 20"/>
            </lv_chart>

            <!-- The most complicated types. 
                 map has NULL terminated string type, &#xA; converts to \n too.
                 ctrl_map  is an enum array where values can be ured too -->
            <lv_buttonmatrix 
             map="'first' 'second' '&#xA;' 'third'" 
             ctrl_map="width_4 checked checkable|disabled"
             />  
        </smart_slider>
    </view>
</screen>